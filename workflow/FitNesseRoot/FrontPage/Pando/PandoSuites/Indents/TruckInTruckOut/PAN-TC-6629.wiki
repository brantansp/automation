---
Help: Ensure allowing truck in to backdate even before indent creation date
Suites: common
Test
---
!5 Config in mongodb - 	"truck_in_allow_back_date" : true

!***> Unique values assignment
!|Script |Common                                     |
|$unique=|getCurrentDateTimeStamp;|yMMddHHmmss       |
|$num1=  |getRandomNumber;        |20     |76        |
|$num2=  |getRandomNumber;        |1000   |9999      |
|$rand1= |getRandomString;        |2      |ALPHAUPPER|
|$year=  |getSubString;           |$unique|0    |4   |
|$indate=|getCurrentDateTimeStamp;|yyyy/MM/dd        |
|$vno_1= |getRandomNumber;        |20     |76        |
|$vno_2= |getRandomString;        |2      |ALPHAUPPER|
|$vno_3= |getRandomNumber;        |1000   |9999      |

!|Script          |DateUtil                       |
|$contractDate=   |dateCalculation;|dd-MMM-yyyy|2 |
|$loadingDate=    |dateCalculation;|yyyy/MM/dd |-4|
|$truckoutdate=   |dateCalculation;|yyyy/MM/dd |0 |
|$rdate=          |dateCalculation;|yyyy/MM/dd |0 |
|$truckinbackdate=|dateCalculation;|yyyy/MM/dd |-3|

!|Script      |DateUtil                        |
|$currentTime=|getCurrentDateTimeStamp;|hh:mm:a|

!|Script          |Common                                                  |
|$truckoutdate=   |stringConcatenation;|$truckoutdate   |!- $currentTime -!|
|$rdate=          |stringConcatenation;|$rdate          |!- $currentTime -!|
|$truckinbackdate=|stringConcatenation;|$truckinbackdate|!- $currentTime -!|

!|Script                        |DateUtil                               |
|$loadingDate=                  |utcConversion;  |$loadingDate          |
|$truckoutdate=                 |utcConversion;  |$truckoutdate         |
|$rdate=                        |utcConversion;  |$rdate                |
|$truckinbacktime=              |dateCalculation;|hour       |hh:mma |-3|
|$truckinbackdate=              |dateCalculation;|dd-MM-yyyy |-3        |
|$currenthrampm=                |dateCalculation;|hour       |hh:mm a|-3|
|$month=                        |dateCalculation;|dd MMM yyyy|-3        |
|$expectedArrivedDateInTimeline=|dateCalculation;|dd MMM yyyy|-3        |
|$expectedArrivedTimeInTimeline=|dateCalculation;|hour       |hh:mm a|-3|

#!|Script|Common|
#|$expectedArrivedDateInTimeline=|stringConcatenation;|$month|!- $currenthrampm-!|

!define truck_no {TN $vno_1 $vno_2 $vno_3}
*!

!**> Source Depot Creation
!define depot_name {s$unique}
!define depot_state {Tamil Nadu}
!define depot_city {s$unique}
!define depot_region {South}
!define depot_short_code {s1$num}
!define depot_reference_id {s1$unique}
!define depot_address {No 15,GST Street}
!define depot_pincode {123456}
!define depot_gstn_no {123}
!define depot_delivery_type {1}
!define depot_phone {123}
!define gname {Gate 1}
!define grefid {SG1$unique}
!define g_user_email {pandoindent+1$unique@gmail.com}

!include -c .FrontPage.Pando.Common.CommonDepoCreationWithGate

!|script          |common           |
|$location1_id=   |getTrim;|$depot  |
|$source1_gate_id=|getTrim;|$gate_id|
*!

!***> Transporter Creation for Indent
!define transporter_name {t$unique}
!define transporter_ref_id {tr$unique}
!define address {Ashok Nagar}
!define city {Chennai}
!define state {Tamil Nadu}
!define pincode {600083}
!define manager_name {Manager $unique}
!define manager_mobile {123}
!define manager_email {pandotransporter+$unique@outlook.com}
!define pancard {AUYPD33324L}
!include .FrontPage.Pando.PandoSuites.PandoAPI.DataManager.TransporterCreationAPI

!|script           |common                  |
|$transporter_id_1=|getTrim;|$transporter_id|
*!

!**> Retrieving Password for the Created Transporter 
!include -c .FrontPage.Pando.Common.CommonTransporterPassword
*!

!**> Material Creation
!define material_name {m$unique}
!define material_code {mc$unique}

!include -c .FrontPage.Pando.PandoSuites.PandoAPI.DataManager.MaterialCreationAPI
**!

!***> Vehicle Creation
!define vehicle_name {v$unique}
!define cft {965}
!define kg {1000}
!define vehicle_type {FTL}
!include -c .FrontPage.Pando.PandoSuites.PandoAPI.DataManager.VehicleCreationAPI
*!

!***> Destination Depot Creation
!define depot_name {d$unique}
!define depot_state {Hariyana}
!define depot_city {d$unique}
!define depot_region {South}
!define depot_short_code {d$num}
!define depot_reference_id {d$unique}
!define depot_address {No 15,GST Street}
!define depot_pincode {123456}
!define depot_gstn_no {123}
!define depot_delivery_type {1}
!define depot_phone {123}
!define gname {Gate 1}
!define grefid {DG$unique}
!define g_user_email {pandoindent+2$unique@gmail.com}

!include -c .FrontPage.Pando.Common.CommonDepoCreationWithGate

!|script                       |common           |
|$destination_location_id=     |getTrim;|$depot  |
|$destination_gate_location_id=|getTrim;|$gate_id|
*!

!***> Uploading Rate Matrix for source 1 to destination depot
!define row {Type*,Source*,Destination*,Vehicle Type*,Distance,Transporter Reference ID*,Transporter Name,Transit Days*,Freight Rate*,Freight Unit*,Valid From*,Valid To*,Minimum Rate,Multiplying Factor,Detention Group,Product Category,Fixed Rate,ODA Rate,Oda Unit,Minimum ODA,Point Charges,Is Dedicated,Truck Count,Slab Kms,Min Kms,Additional Charge Percentage,Hilly Region Addition Percentage,Is Round Trip Eligible,Return Freight Rate,Exclude,Trip Count}
!define column {city,s$unique,d$unique,${vehicle_name},100,tr$unique,t$unique,2,40000,per_trip,01-Jan-$year,31-Dec-2030,100,1,}

!include -c .FrontPage.Pando.Common.RateMatrix
*!

!**> Indent Creation
!define order_type  {0}
!define transporter_id {$transporter_id_1}
!define vehicle_type_id {$vehicle_id}
!define location_id {$location1_id}
!define gate_id {$source1_gate_id}
!define vehicle_requirement_date {$loadingDate}
!define loader_available {false}
!define add_to_invoice {false}
!define indent_type {2}
!define destination_location_id {$destination_location_id}
!define sold_to_id {$destination_gate_location_id}
!define unloader_available {false}
!define expected_delivery_at {$expected_date}

!|script|common|
|$data= |getTrim;|{"data":{"order_type":${order_type},"transporter_id":"${transporter_id}","vehicle_type_id":"${vehicle_type_id}","sources":[{"type":1,"location_id":"${location_id}","gate_id":"${gate_id}","vehicle_requirement_date":"${vehicle_requirement_date}","loader_available":${loader_available},"add_to_invoice":${add_to_invoice}}],"destinations":[{"type":1,"location_id":"${destination_location_id}","source_location_id":"${location_id}","source_gate_id":"${gate_id}","sold_to_id":"${sold_to_id}","unloader_available":${unloader_available},"add_to_invoice":${add_to_invoice},"gate_id":"${sold_to_id}"}],"no_of_vehicles": 1}}|

!include -c .FrontPage.Pando.PandoSuites.PandoAPI.Indent.IndentCreationDynamicAPI
*!

!**> Adding vehicle number
!define vechicle_number {TN $num1 $rand1 $num2}
!define driver_name {$driver}
!define phone_number {123}

!include .FrontPage.Pando.PandoSuites.PandoAPI.Indent.TruckAssignAPI
**!

!**> Filter indent after Vehicle assigned
!|script       |ui             |
|navigateToUrl;|${surl}/indents|

!define search_text {s$unique}
!include -c .FrontPage.Pando.PandoSuites.Indents.IndentSearch.CommonIndentDepotFilter

!define search_text {$unique}
!include -c .FrontPage.Pando.PandoSuites.Indents.IndentSearch.CommonIndentSearch
**! 

!** Selecting back date in Truck in

!|Script          |common                   |
|$truckinbackdate=|getTrim;|$truckinbackdate|
|$truckinbacktime=|getTrim;|$truckinbacktime|

!define in_time {$truckinbacktime} 
!define in_date {$truckinbackdate} 

!|Script                     |Ui                                                                                                                                       |
|click;                      |//span[contains(text(),'Truck in')]                                       |xpath                                                         |
|click;                      |//div[text()='Date']/..//div//input                                       |xpath                                                         |
|click;                      |//input[@placeholder='Select date']                                       |xpath                                                         |
|clearAndSend;               |//input[@placeholder='Select date']                                       |xpath                                         |${in_date}     |
|click;                      |//input[@placeholder='Select time']                                       |xpath                                                         |
|clearAndSend;               |//input[@placeholder='Select time']                                       |xpath                                         |${in_time}     |
|click;                      |//div[@class='el-picker-panel__footer']                                   |xpath                                                         |
|click;                      |//div[@class='el-picker-panel__footer']/button/span[contains(text(),'OK')]|xpath                                                         |
|click;                      |//div[contains(@class,'popover')]//button[contains(text(),'Submit')]      |xpath                                                         |
|waitForElementToBeDisplayed;|//h3[text()='Success']/following-sibling::span                            |xpath                                         |20             |
|$successMessage=            |getElementAttribute;                                                      |//h3[text()='Success']/following-sibling::span|xpath|innerText|

!|Script   |common                                                                        |
|check     |checkIfStringAreEqual;|$successMessage|Truck arrived for indent $order_id|true|
|$tresult1=|checkIfStringAreEqual;|$successMessage|Truck arrived for indent $order_id     |
**!

!** Verify Status
!|script       |ui                                                |
|$order_status=|getText;|//div[@class='order-status-button']|xpath|

!|script   |common                                           |
|check     |checkIfStringAreEqual;|$order_status|ARRIVED|true|
|$tresult2=|checkIfStringAreEqual;|$order_status|ARRIVED     |
*!

!** Verifying arrived date in timeline
!|Script                      |Ui                                                                                                                                                 |
|click;                       |//div[contains(@class,'order-row')]//span[normalize-space(text())='t$unique']|xpath                                                                |
|waitForElementToDisappear;   |//div[@class='status-msg']//img                                              |xpath                                                          |15   |
|waitForElementToBeDisplayed; |//div[@class='tab-content']//child::div[@role='tablist']                     |xpath                                                          |30   |
|click;                       |//div[text()='Timeline']                                                     |xpath                                                                |
|$actualArrivedDateInTimeline=|getText;                                                                     |//h4[contains(text(),'Arrived')]/preceding-sibling::div/span[1]|xpath|
|$actualArrivedTimeInTimeline=|getText;                                                                     |//h4[contains(text(),'Arrived')]/preceding-sibling::div/span[2]|xpath|
*!

!** Verifying results
!|Script   |Common                                                                                           |
|$tresult3=|checkIfStringAreEqualIgnoreCase;|$actualArrivedDateInTimeline|$expectedArrivedDateInTimeline     |
|check     |checkIfStringAreEqualIgnoreCase;|$actualArrivedDateInTimeline|$expectedArrivedDateInTimeline|true|
|$tresult4=|checkIfStringAreEqualIgnoreCase;|$actualArrivedTimeInTimeline|$expectedArrivedTimeInTimeline     |
|check     |checkIfStringAreEqualIgnoreCase;|$actualArrivedTimeInTimeline|$expectedArrivedTimeInTimeline|true|
**!

!* Validating test results
!|script  |common                                                                   |
|$tresult=|checkIfStringAreEqualInArray|$tresult1,$tresult2,$tresult3,$tresult4,true|
**!
